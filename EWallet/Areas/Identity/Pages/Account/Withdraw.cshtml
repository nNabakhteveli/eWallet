@page
@inject UserManager<UserEntity> UserManager
@inject SignInManager<UserEntity> SignInManager
@inject IWalletRepository walletRepository
@model EWallet.Areas.Identity.Pages.Account.Withdraw

@{
    Layout = "_Layout";

    var user = await UserManager.GetUserAsync(User);
    var wallet = walletRepository.GetWalletById(user.WalletId);
}

<!DOCTYPE html>

<html>
<head>
    <title></title>
</head>
<body>
<div>
    @if (SignInManager.IsSignedIn(User))
    {
        <h1>@UserManager.GetUserName(User)</h1>
        <p>Current balance: @wallet.CurrentBalance</p>

        <ul class="nav nav-pills nav-fill">
            <li class="nav-item">
                <a class="nav-link" href="/Identity/Account/Wallet" aria-current="page">Deposit</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/Identity/Account/Withdraw">Withdraw</a>
            </li>
        </ul>

        <form>
            <div class="mb-3">
                <label for="exampleInputEmail1" class="form-label">Email address</label>
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
                <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
            </div>
            <div class="mb-3">
                <label for="exampleInputPassword1" class="form-label">Password</label>
                <input type="password" class="form-control" id="exampleInputPassword1">
            </div>
            <div class="mb-3 form-check">
                <input type="checkbox" class="form-check-input" id="exampleCheck1">
                <label class="form-check-label" for="exampleCheck1">Check me out</label>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    }
    else
    {
        @Redirect("/")
    }
</div>
</body>
</html>