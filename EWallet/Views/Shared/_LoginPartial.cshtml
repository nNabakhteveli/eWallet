@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using EWallet.Domain.Data

@inject SignInManager<UserEntity> SignInManager
@inject IWalletRepository _WalletRepository;
@inject UserManager<UserEntity> UserManager

@{
    var userWallet = await _WalletRepository.GetWalletByUserIdAsync(UserManager.GetUserId(User));
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Wallet" title="Wallet">Your Wallet</a>
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" title="Wallet">Balance: $@userWallet.CurrentBalance</a>
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-controller="Transactions" asp-action="TableView" title="Wallet">Recorded Transactions</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>